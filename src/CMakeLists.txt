FIND_PACKAGE(MyBoost)
FIND_PACKAGE(OpenSSL)

INCLUDE_DIRECTORIES("${CMAKE_CURRENT_SOURCE_DIR}/boost_asio_1_1_0")
INCLUDE_DIRECTORIES("${BOOST_INCLUDE_DIR}")
LINK_DIRECTORIES("${BOOST_LIBRARY_DIR}")

SUBDIRS(net-asio)
SUBDIRS(qt-gui)
SUBDIRS(bench)
SUBDIRS(util)

SET(BUILDVER_FILE
	"${PROJECT_BINARY_DIR}/BuildVersion.h"
)

INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}")
IF(EXISTS "${BUILDVER_FILE}")
ELSE(EXISTS "${BUILDVER_FILE}")
	file(WRITE "${BUILDVER_FILE}" "// generated version file\n")
	file(APPEND "${BUILDVER_FILE}" "#define VERSION_MAJOR_STRING \"0\"\n")
	file(APPEND "${BUILDVER_FILE}" "#define VERSION_MINOR_STRING \"0\"\n")
	file(APPEND "${BUILDVER_FILE}" "#define VERSION_REV_STRING \"0\"\n")
	SET(BUILDVER_FILE "")
ENDIF(EXISTS "${BUILDVER_FILE}")

SET(UFTT_SOURCES
	Main.cpp

	Types.h
	Globals.h
	BuildString.h         "${BUILDVER_FILE}"
	SimpleBackend.h       SimpleBackend.cpp
	SimpleConnection.h    SimpleConnection.cpp

	AutoUpdate.h          AutoUpdate.cpp

	qt-gui/Icons/icon.rc

	Platform.h            Platform.cpp
)

SET(UFTT_LIBRARIES
	uftt-qt
	lib-net-asio
	lib-util
)

ADD_EXECUTABLE(uftt ${UFTT_SOURCES} "${CMAKE_CURRENT_BINARY_DIR}/BuildStringMacros.cpp")

ADD_CUSTOM_COMMAND(OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/BuildStringMacros.cpp"
	COMMAND "${CMAKE_COMMAND}"
	ARGS -E copy "${CMAKE_CURRENT_SOURCE_DIR}/BuildStringMacros.cpp" "${CMAKE_CURRENT_BINARY_DIR}/BuildStringMacros.cpp"
	COMMENT "VersionTarget"
	DEPENDS ${UFTT_SOURCES} ${UFTT_LIBRARIES}
	)

if(OPENSSL_FOUND)
	add_definitions("-DUSE_OPENSSL")
	INCLUDE_DIRECTORIES("${OPENSSL_INCLUDE_DIR}")
	TARGET_LINK_LIBRARIES(uftt
		${OPENSSL_LIBRARY}
	)
endif(OPENSSL_FOUND)

IF(MSVC)
	SET_TARGET_PROPERTIES(uftt PROPERTIES
		LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS"
	)
ENDIF(MSVC)

TARGET_LINK_LIBRARIES(uftt
	${UFTT_LIBRARIES}
	${BOOST_SYSTEM_LIBRARY}
	${BOOST_THREAD_LIBRARY}
	${BOOST_SIGNALS_LIBRARY}
	${BOOST_DATETIME_LIBRARY}
	${BOOST_FILESYSTEM_LIBRARY}
	${BOOST_SERIALIZATION_LIBRARY}
)

IF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")
	SET(CPACK_GENERATOR "DEB")

	SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Ultimate File Transfer Tool")
	SET(CPACK_PACKAGE_VENDOR "uftt")
	SET(CPACK_PACKAGE_NAME "uftt")
	SET(CPACK_PACKAGE_CONTACT "simon.sasburg@gmail.com")
	SET(CPACK_PACKAGE_VERSION_MAJOR "0")
	SET(CPACK_PACKAGE_VERSION_MINOR "1")
	SET(CPACK_PACKAGE_VERSION_PATCH "343")
	#SET(CPACK_PACKAGE_INSTALL_DIRECTORY "uftt ${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}")
	SET(CPACK_SOURCE_PACKAGE_FILE_NAME "uftt-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
	SET(CPACK_PACKAGE_EXECUTABLES "uftt" "UFTT Executable")

	SET(CPACK_DEBIAN_PACKAGE_DEPENDS
		#"libc6, libfontconfig1, libfreetype6, libgcc1, libice6, libpng12-0, libqt4-core, libqt4-gui, libsm6, libssl0.9.8, libstdc++6, libx11-6, libxcursor1, libxext6, libxi6, libxinerama1, libxrandr2, libxrender1, zlib1g"
		"libc6, libgcc1, libstdc++6, libqt4-gui, libssl0.9.8"
		#old:	"libc6 (>= 2.3.1-6), libgcc1 (>= 1:3.4.2-12)"
	)

	IF(UNIX)
		SET(CPACK_STRIP_FILES "bin/uftt")
		SET(CMAKE_INSTALL_PREFIX "/usr/local")
	ENDIF(UNIX)

	# List executables
	INCLUDE(CPack)
ENDIF(EXISTS "${CMAKE_ROOT}/Modules/CPack.cmake")

INSTALL(TARGETS uftt
	RUNTIME DESTINATION bin
)
